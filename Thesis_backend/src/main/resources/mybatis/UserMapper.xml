<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hu.elte.inf.backend.dao.UserMapper">

    <!-- ========================================== User ========================================== -->
    <!-- 获得所有的用户 -->
    <select id="findAllUsers" resultType="hu.elte.inf.backend.sqlEntity.User">
        SELECT * FROM user_account
    </select>

    <!-- 通过用户id查询用户 -->
    <select id="getUserById" parameterType="long" resultType="hu.elte.inf.backend.sqlEntity.User">
        SELECT * FROM user_account WHERE id = #{id}
    </select>

    <!-- 通过用户名查询用户 -->
    <select id="getUserByUserName" parameterType="String" resultType="hu.elte.inf.backend.sqlEntity.User">
        SELECT * FROM user_account WHERE username = #{username}
    </select>

    <!-- 通过邮件查询用户 -->
    <select id="getUserByEmail" parameterType="String" resultType="hu.elte.inf.backend.sqlEntity.User">
        SELECT * FROM user_account WHERE email = #{email}
    </select>

    <!-- 插入新用户 -->
    <insert id="insertUser" parameterType="hu.elte.inf.backend.sqlEntity.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user_account (username, password, email, isAdmin, birthdate, gender, address)
        VALUES (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, false, #{birthdate,jdbcType=DATE}, #{gender,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR})
    </insert>

    <!-- 更新用户个人信息 -->
    <update id="updateUserInfo" parameterType="hu.elte.inf.backend.sqlEntity.User">
        UPDATE user_account
        <set>
            <if test="username != null">username = #{username},</if>
            <if test="email != null">email = #{email},</if>
            <if test="birthdate != null">birthdate = #{birthdate},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="address != null">address = #{address}</if>
        </set>
        WHERE id = #{id}
    </update>

    <!-- 更新用户密码 -->
    <update id="updateUserPassword">
        UPDATE user_account SET password = #{newPassword} WHERE id = #{id}
    </update>

    <!-- 删除用户 -->
    <delete id="deleteUser" parameterType="long">
        DELETE FROM user_account WHERE id = #{id}
    </delete>


</mapper>